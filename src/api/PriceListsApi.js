/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.5
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient'
import GetPriceListItemsResponse from '../model/GetPriceListItemsResponse'
import ListPriceListsResponse from '../model/ListPriceListsResponse'

/**
* PriceLists service.
* @module api/PriceListsApi
* @version 2.1.2
*/
export default class PriceListsApi {
  /**
    * Constructs a new PriceListsApi.
    * @alias module:api/PriceListsApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
  constructor (apiClient) {
    this.apiClient = apiClient || ApiClient.instance
  }

  /**
     * Get PriceList Items List
     * Retrieves all the Items of a PriceList
     * @param {Number} companyId The ID of the company.
     * @param {String} priceListId
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetPriceListItemsResponse} and HTTP response
     */
  getPriceListItemsWithHttpInfo (companyId, priceListId) {
    const postBody = null
    // verify the required parameter 'companyId' is set
    if (companyId === undefined || companyId === null) {
      throw new Error("Missing the required parameter 'companyId' when calling getPriceListItems")
    }
    // verify the required parameter 'priceListId' is set
    if (priceListId === undefined || priceListId === null) {
      throw new Error("Missing the required parameter 'priceListId' when calling getPriceListItems")
    }

    const pathParams = {
      company_id: companyId,
      price_list_id: priceListId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const authNames = ['OAuth2AuthenticationCodeFlow']
    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetPriceListItemsResponse
    return this.apiClient.callApi(
      '/c/{company_id}/price_lists/{price_list_id}/items', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, null
    )
  }

  /**
     * Get PriceList Items List
     * Retrieves all the Items of a PriceList
     * @param {Number} companyId The ID of the company.
     * @param {String} priceListId
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetPriceListItemsResponse}
     */
  getPriceListItems (companyId, priceListId) {
    return this.getPriceListItemsWithHttpInfo(companyId, priceListId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Get PriceLists
     * Retrieves all price lists of the company
     * @param {Number} companyId The ID of the company.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/ListPriceListsResponse} and HTTP response
     */
  getPriceListsWithHttpInfo (companyId) {
    const postBody = null
    // verify the required parameter 'companyId' is set
    if (companyId === undefined || companyId === null) {
      throw new Error("Missing the required parameter 'companyId' when calling getPriceLists")
    }

    const pathParams = {
      company_id: companyId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const authNames = ['OAuth2AuthenticationCodeFlow']
    const contentTypes = []
    const accepts = ['application/json']
    const returnType = ListPriceListsResponse
    return this.apiClient.callApi(
      '/c/{company_id}/price_lists', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, null
    )
  }

  /**
     * Get PriceLists
     * Retrieves all price lists of the company
     * @param {Number} companyId The ID of the company.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/ListPriceListsResponse}
     */
  getPriceLists (companyId) {
    return this.getPriceListsWithHttpInfo(companyId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }
}
