/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 500.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.
 *
 * The version of the OpenAPI document: 2.1.3
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient'
import GetCompanyInfoResponse from '../model/GetCompanyInfoResponse'
import GetCompanyPlanUsageResponse from '../model/GetCompanyPlanUsageResponse'

/**
* Companies service.
* @module api/CompaniesApi
* @version 2.1.1
*/
export default class CompaniesApi {
  /**
    * Constructs a new CompaniesApi.
    * @alias module:api/CompaniesApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
  constructor (apiClient) {
    this.apiClient = apiClient || ApiClient.instance
  }

  /**
     * Get Company Info
     * Gets the company detailed info.
     * @param {Number} companyId The ID of the company.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetCompanyInfoResponse} and HTTP response
     */
  getCompanyInfoWithHttpInfo (companyId) {
    const postBody = null
    // verify the required parameter 'companyId' is set
    if (companyId === undefined || companyId === null) {
      throw new Error("Missing the required parameter 'companyId' when calling getCompanyInfo")
    }

    const pathParams = {
      company_id: companyId
    }
    const queryParams = {
    }
    const headerParams = {
    }
    const formParams = {
    }

    const authNames = ['OAuth2AuthenticationCodeFlow']
    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetCompanyInfoResponse
    return this.apiClient.callApi(
      '/c/{company_id}/company/info', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, null
    )
  }

  /**
     * Get Company Info
     * Gets the company detailed info.
     * @param {Number} companyId The ID of the company.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetCompanyInfoResponse}
     */
  getCompanyInfo (companyId) {
    return this.getCompanyInfoWithHttpInfo(companyId)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }

  /**
     * Get Company Plan Usage
     * Gets the company limits usage.
     * @param {Number} companyId The ID of the company.
     * @param {module:model/String} category Category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GetCompanyPlanUsageResponse} and HTTP response
     */
  getCompanyPlanUsageWithHttpInfo (companyId, category) {
    const postBody = null
    // verify the required parameter 'companyId' is set
    if (companyId === undefined || companyId === null) {
      throw new Error("Missing the required parameter 'companyId' when calling getCompanyPlanUsage")
    }
    // verify the required parameter 'category' is set
    if (category === undefined || category === null) {
      throw new Error("Missing the required parameter 'category' when calling getCompanyPlanUsage")
    }

    const pathParams = {
      company_id: companyId
    }
    const queryParams = {
      category
    }
    const headerParams = {
    }
    const formParams = {
    }

    const authNames = ['OAuth2AuthenticationCodeFlow']
    const contentTypes = []
    const accepts = ['application/json']
    const returnType = GetCompanyPlanUsageResponse
    return this.apiClient.callApi(
      '/c/{company_id}/company/plan_usage', 'GET',
      pathParams, queryParams, headerParams, formParams, postBody,
      authNames, contentTypes, accepts, returnType, null
    )
  }

  /**
     * Get Company Plan Usage
     * Gets the company limits usage.
     * @param {Number} companyId The ID of the company.
     * @param {module:model/String} category Category
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GetCompanyPlanUsageResponse}
     */
  getCompanyPlanUsage (companyId, category) {
    return this.getCompanyPlanUsageWithHttpInfo(companyId, category)
      .then(function (response_and_data) {
        return response_and_data.data
      })
  }
}
