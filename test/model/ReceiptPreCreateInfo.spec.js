/**
 * Fatture in Cloud API v2 - API Reference
 * ## Request informations In every request description you will be able to find some additional informations about context, permissions and supported functionality:  | Parameter | Description | |-----------|-------------| | üë• Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  | | üîí Required scope | If present, indicates the required scope to fulfill the request. | | üîç Filtering | If present, indicates which fields support the filtering feature. | | ‚ÜïÔ∏è Sorting | If present, indicates which fields support the sorting feature. | | üìÑ Paginated results | If present, indicate that the results are paginated. | | üé© Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |  For example the request `GET /entities/{entityRole}` have tis informations: \\ üë• Company context \\ üîí Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\ üîç Filtering: `id`, `name` \\ ‚ÜïÔ∏è Sorting: `id`, `name` \\ üìÑ Paginated results \\ üé© Customized responses supported  Keep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests: ``` GET /c/{company_id}/issued_documents ```
 *
 * The version of the OpenAPI document: v2.0.0
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FattureInCloudApiV2ApiReference);
  }
}(this, function(expect, FattureInCloudApiV2ApiReference) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new FattureInCloudApiV2ApiReference.ReceiptPreCreateInfo();
    instance.numerations = {
      2020 : {
        sales_receipt : {
            REC001 : 3
        }
      },
      2021 : {
        sales_receipt : {
            REC005 : 3,
            REC004 : 2,
            REC003 : 2,
            REC001 : 7
          }
        }
      },
    instance.numerations_list = [
          "REC001",
          "REC002",
          "REC003",
          "REC005",
          "REC006"
      ],
    instance.rc_centers_list = [
          "Sede generale",
          "Negozio Bergamo",
          "Negozio Milano"
      ],
    instance.payment_accounts_list = [
          {
          id : 111,
          name : "Indesa - carta conto"
          },
          {
          id : 222,
          name : "Contanti"
          }
      ],
    instance.categories_list = [
          "altro",
          "arredamento"
      ],
    instance.vat_types_list = [
          {
          id : 1334,
          value : 0,
          description : "Non imp. art. 17 c. 6 DPR 633/72 e s.m.i.",
          is_disabled : false
          },
          {
          id : 1333,
          value : 0,
          description : "Non sogg. art. 74 c. 7 e 8 DPR 633/72",
          is_disabled : false
          }
      ];
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('ReceiptPreCreateInfo', function() {
    it('should create an instance of ReceiptPreCreateInfo', function() {
      expect(instance).to.be.a(FattureInCloudApiV2ApiReference.ReceiptPreCreateInfo);
    });

    it('should have the property numerations (base name: "numerations")', function() {
      expect(typeof instance.numerations).to.be('object');
    });

    it('should have the property numerationsList (base name: "numerations_list")', function() {
      expect(typeof instance.numerations_list).to.be('object');
    });

    it('should have the property rcCentersList (base name: "rc_centers_list")', function() {
      expect(typeof instance.rc_centers_list).to.be('object');
    });

    it('should have the property paymentAccountsList (base name: "payment_accounts_list")', function() {
      expect(typeof instance.payment_accounts_list).to.be('object');
    });

    it('should have the property categoriesList (base name: "categories_list")', function() {
      expect(typeof instance.categories_list).to.be('object');
    });

    it('should have the property vatTypesList (base name: "vat_types_list")', function() {
      expect(typeof instance.vat_types_list).to.be('object');
    });

  });

}));
