/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function (root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd() + '/src/index'], factory)
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd() + '/src/index'))
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.fattureInCloudSdk)
  }
}(this, function (expect, fattureInCloudSdk) {
  'use strict'

  let instance

  beforeEach(function () {
    instance = new fattureInCloudSdk.Receipt()
    instance.id = 12345
    instance.date = '2021-08-20'
    instance.number = 5
    instance.numeration = 'REC005'
    instance.amount_net = 16.39
    instance.amount_vat = 3.61
    instance.amount_gross = 20
    instance.use_gross_prices = true
    instance.type = 'sales_receipt'
    instance.description = 'cassa 1'
    instance.rc_center = ''
    instance.created_at = '2021-08-20'
    instance.updated_at = '2021-08-20'
    instance.payment_account = {
      id: 222,
      name: 'carta di credito'
    }
    instance.items_list = [
      {
        id: 666,
        amount_net: 10,
        amount_vat: 2.2,
        amount_gross: 12.2,
        category: 'altro',
        vat: {
          id: 0,
          value: 22,
          description: 'iva'
        }
      }
    ]
  })

  // const getProperty = function (object, getter, property) {
  //   // Use getter method if present; otherwise, get the property directly.
  //   if (typeof object[getter] === 'function') { return object[getter]() } else { return object[property] }
  // }

  // const setProperty = function (object, setter, property, value) {
  //   // Use setter method if present; otherwise, set the property directly.
  //   if (typeof object[setter] === 'function') { object[setter](value) } else { object[property] = value }
  // }

  describe('Receipt', function () {
    it('should create an instance of Receipt', function () {
      expect(instance).to.be.a(fattureInCloudSdk.Receipt)
    })

    it('should have the property id (base name: "id")', function () {
      expect(typeof instance.id).to.be('number')
    })

    it('should have the property date (base name: "date")', function () {
      expect(typeof instance.date).to.be('string')
    })

    it('should have the property number (base name: "number")', function () {
      expect(typeof instance.number).to.be('number')
    })

    it('should have the property numeration (base name: "numeration")', function () {
      expect(typeof instance.numeration).to.be('string')
    })

    it('should have the property amountNet (base name: "amount_net")', function () {
      expect(typeof instance.amount_net).to.be('number')
    })

    it('should have the property amountVat (base name: "amount_vat")', function () {
      expect(typeof instance.amount_vat).to.be('number')
    })

    it('should have the property amountGross (base name: "amount_gross")', function () {
      expect(typeof instance.amount_gross).to.be('number')
    })

    it('should have the property useGrossPrices (base name: "use_gross_prices")', function () {
      expect(typeof instance.use_gross_prices).to.be('boolean')
    })

    it('should have the property type (base name: "type")', function () {
      expect(typeof instance.type).to.be('string')
    })

    it('should have the property description (base name: "description")', function () {
      expect(typeof instance.description).to.be('string')
    })

    it('should have the property rcCenter (base name: "rc_center")', function () {
      expect(typeof instance.rc_center).to.be('string')
    })

    it('should have the property createdAt (base name: "created_at")', function () {
      expect(typeof instance.created_at).to.be('string')
    })

    it('should have the property updatedAt (base name: "updated_at")', function () {
      expect(typeof instance.updated_at).to.be('string')
    })

    it('should have the property paymentAccount (base name: "payment_account")', function () {
      expect(typeof instance.payment_account).to.be('object')
    })

    it('should have the property itemsList (base name: "items_list")', function () {
      expect(typeof instance.items_list).to.be('object')
    })
  })
}))
