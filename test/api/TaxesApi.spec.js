/**
 * Fatture in Cloud API v2 - API Reference
 * ## Request informations In every request description you will be able to find some additional informations about context, permissions and supported functionality:  | Parameter | Description | |-----------|-------------| | üë• Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  | | üîí Required scope | If present, indicates the required scope to fulfill the request. | | üîç Filtering | If present, indicates which fields support the filtering feature. | | ‚ÜïÔ∏è Sorting | If present, indicates which fields support the sorting feature. | | üìÑ Paginated results | If present, indicate that the results are paginated. | | üé© Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |  For example the request `GET /entities/{entityRole}` have tis informations: \\ üë• Company context \\ üîí Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\ üîç Filtering: `id`, `name` \\ ‚ÜïÔ∏è Sorting: `id`, `name` \\ üìÑ Paginated results \\ üé© Customized responses supported  Keep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests: ``` GET /c/{company_id}/issued_documents ```
 *
 * The version of the OpenAPI document: v2.0.0
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

 import CreateF24Request from '../../src/model/CreateF24Request';
 import CreateF24Response from '../../src/model/CreateF24Response';
 import GetF24Response from '../../src/model/GetF24Response';
 import ListF24Response from '../../src/model/ListF24Response';
 import ModifyF24Request from '../../src/model/ModifyF24Request';
 import ModifyF24Response from '../../src/model/ModifyF24Response';
 import UploadF24AttachmentResponse from '../../src/model/UploadF24AttachmentResponse';

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FattureInCloudApiV2ApiReference);
  }
}(this, function(expect, FattureInCloudApiV2ApiReference) {
  'use strict';

  var sandbox = require("sinon").createSandbox();

  var instance = new FattureInCloudApiV2ApiReference.TaxesApi();

  var createF24ResponseObj = {"data":{"amount":840.36,"description":"PAGAMENTO IVA 2021","due_date":"2021-12-31","status":"paid","payment_account":{"id":111},"attachment_token":"b19c01da9b1688fb73d0d9e8ad"}};
  var createF24Stub = sandbox.stub(instance, "createF24").returns(createF24ResponseObj);

  var deleteF24ResponseObj = {};
  sandbox.stub(instance, "deleteF24").returns(deleteF24ResponseObj);

  var deleteF24AttachmentResponseObj = {};
  sandbox.stub(instance, "deleteF24Attachment").returns(deleteF24AttachmentResponseObj);

  var getF24ResponseObj = {"data":{"id":12345,"amount":840.36,"description":"PAGAMENTO IVA 2021","due_date":"2021-12-31","status":"paid","payment_account":{"id":111,"name":"Indesa - carta conto"},"attachment_url":"b19c01da9b1688fb73d0d9e8adae89a8.pdf"}};
  sandbox.stub(instance, "getF24").returns(getF24ResponseObj);

  var listF24ResponseObj = {"current_page":1,"data":[{"id":12345,"amount":840.36,"description":"PAGAMENTO IVA 2021","due_date":"2021-12-31","status":"paid","payment_account":{"id":111,"name":"Indesa - carta conto"},"attachment_url":"b19c01da9b1688fb73d0d9e8adae89a8.pdf"},{"id":12346,"amount":810.62,"description":"PAGAMENTO IVA 2020","due_date":"2020-12-31","status":"paid","payment_account":{"id":111,"name":"Indesa - carta conto"},"attachment_url":"bb6df8490dad4770353b378ea926d8ba.pdf"}],"first_page_url":"page=1","from":1,"last_page":1,"last_page_url":"page=1","next_page_url":null,"path":"taxes","per_page":50,"prev_page_url":null,"to":2,"total":2,"aggregated_data":{"amount":"6438.96"}};
  sandbox.stub(instance, "listF24").returns(listF24ResponseObj);

  var modifyF24ResponseObj = {"data":{"id":12345,"amount":840.36,"description":"PAGAMENTO IVA 2021","due_date":"2021-12-31","status":"paid","payment_account":{"id":111,"name":"Indesa - carta conto"},"attachment_url":"b19c01da9b1688fb73d0d9e8adae89a8.pdf"}};
  var modifyF24Stub = sandbox.stub(instance, "modifyF24").returns(modifyF24ResponseObj);

  var uploadF24AttachmentResponseObj = {"data":{"attachment_token":"YmMyNWYxYzIwMTU3N2Y4ZGE3ZjZiMzg5OWY0ODNkZDQveXl5LmRvYw"}};
  sandbox.stub(instance, "uploadF24Attachment").returns(uploadF24AttachmentResponseObj);

  beforeEach(function() {

  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('TaxesApi', function() {
    describe('createF24', function() {
      it('should call createF24 successfully', function(done) {
        var opts = { "createF24Request":
          {"data":{"amount":840.36,"description":"PAGAMENTO IVA 2021","due_date":"2021-12-31","status":"paid","payment_account":{"id":21,"name":"Indesa - carta conto"}}}
        };
        var response = instance.createF24(2, opts);
        var responseObj = Object.assign(new CreateF24Response(), response);
        var expectedJson = JSON.stringify(createF24ResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(createF24Stub.getCall(0).args[1]).to.equal(opts);
        done();
      });
    });
    describe('deleteF24', function() {
      it('should call deleteF24 successfully', function(done) {
        expect(1).to.equal(1);
        done();
      });
    });
    describe('deleteF24Attachment', function() {
      it('should call deleteF24Attachment successfully', function(done) {
        expect(1).to.equal(1);
        done();
      });
    });
    describe('getF24', function() {
      it('should call getF24 successfully', function(done) {
        var response = instance.getF24();
        var responseObj = Object.assign(new GetF24Response(), response);
        var expectedJson = JSON.stringify(getF24ResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
    describe('listF24', function() {
      it('should call listF24 successfully', function(done) {
        var response = instance.listF24();
        var responseObj = Object.assign(new ListF24Response(), response);
        var expectedJson = JSON.stringify(listF24ResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
    describe('modifyF24', function() {
      it('should call modifyF24 successfully', function(done) {
        var opts = { "modifyF24Request":
          {"data":{"description":"PAGAMENTO IVA 3041"}}
        };
        var response = instance.modifyF24(2, 12345, opts);
        var responseObj = Object.assign(new ModifyF24Response(), response);
        var expectedJson = JSON.stringify(modifyF24ResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(modifyF24Stub.getCall(0).args[2]).to.equal(opts);
        done();
      });
    });
    describe('uploadF24Attachment', function() {
      it('should call uploadF24Attachment successfully', function(done) {
        var response = instance.uploadF24Attachment();
        var responseObj = Object.assign(new UploadF24AttachmentResponse(), response);
        var expectedJson = JSON.stringify(uploadF24AttachmentResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
  });

}));
