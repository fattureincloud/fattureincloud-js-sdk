/**
 * Fatture in Cloud API v2 - API Reference
 * ## Request informations In every request description you will be able to find some additional informations about context, permissions and supported functionality:  | Parameter | Description | |-----------|-------------| | üë• Context | Indicate the subject of the request. Can be `company`, `user` or `accountant`.  | | üîí Required scope | If present, indicates the required scope to fulfill the request. | | üîç Filtering | If present, indicates which fields support the filtering feature. | | ‚ÜïÔ∏è Sorting | If present, indicates which fields support the sorting feature. | | üìÑ Paginated results | If present, indicate that the results are paginated. | | üé© Customized responses supported | If present, indicate that you can use `field` or `fieldset` to customize the response body. |  For example the request `GET /entities/{entityRole}` have tis informations: \\ üë• Company context \\ üîí Required scope: `entity.clients:r` or `entity.suppliers:r` (depending on `entityRole`) \\ üîç Filtering: `id`, `name` \\ ‚ÜïÔ∏è Sorting: `id`, `name` \\ üìÑ Paginated results \\ üé© Customized responses supported  Keep in mind that if you are making **company realted requests**, you will need to specify the company id in the requests: ``` GET /c/{company_id}/issued_documents ```
 *
 * The version of the OpenAPI document: v2.0.0
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import GetCompanyInfoResponse from '../../src/model/GetCompanyInfoResponse';

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.FattureInCloudApiV2ApiReference);
  }
}(this, function(expect, FattureInCloudApiV2ApiReference) {
  'use strict';

  var sandbox = require("sinon").createSandbox();

  var instance = new FattureInCloudApiV2ApiReference.CompaniesApi();

  var getCompanyInfoResponseObj = {"data":{"id":12345,"name":"Studio Commercialista","email":"mario.rossi@example.com","type":"accountant","fic":true,"fic_plan_name":"premium_plus","fic_signup_date":"2013-11-01","fic_license_expire":"2030-12-31","use_fic":true,"fic_need_setup":false,"fic_license_type":"coupon_b","dic":true,"dic_plan_name":"trial","dic_signup_date":"2018-03-26","dic_license_expire":"2022-12-31","use_dic":true,"dic_license_type":null,"registration_service":"fic","can_use_coupon":false,"access_info":{"role":"master","through_accountant":false,"permissions":{"fic_situation":"read","fic_clients":"write","fic_suppliers":"write","fic_products":"write","fic_issued_documents":"detailed","fic_issued_documents_detailed":{"quotes":"write","proformas":"write","invoices":"write","receipts":"write","delivery_notes":"write","credit_notes":"write","orders":"write","work_reports":"write","supplier_orders":"write","self_invoices":"write"},"fic_received_documents":"write","fic_receipts":"write","fic_calendar":"write","fic_archive":"write","fic_taxes":"write","fic_stock":"write","fic_cashbook":"write","fic_settings":"write","fic_emails":"read","dic_employees":"none","dic_timesheet":"none","dic_settings":"none","fic_invoice_trading":"none","fic_export":"write","fic_import_clients_suppliers":"write","fic_import_products":"write","fic_import_issued_documents":"none","fic_import_bankstatements":"none","fic_recurring":"write","fic_riba":"write"}},"plan_info":{"limits":{"clients":5000,"suppliers":5000,"products":5000,"documents":3000},"functions":{"document_attachments":true,"archive":true,"payment_notifications":true,"paypal":true,"receipts":true,"e_invoice":true,"genius":true,"stock":true,"smtp":true,"mail_tracking":true,"subaccounts":true,"tessera_sanitaria":true,"recurring":true,"sofort":false,"cerved":true,"ts_digital":true,"ts_pay":true,"ts_invoice_trading":true},"functions_status":{"ts_digital":{"active":true},"ts_pay":{"active":true}}},"is_accountant":true,"accountant_id":12345,"fic_payment_subject":"client","dic_payment_subject":"client"}};
  sandbox.stub(instance, "getCompanyInfo").returns(getCompanyInfoResponseObj);

  beforeEach(function() {
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('CompaniesApi', function() {
    describe('getCompanyInfo', function() {
      it('should call getCompanyInfo successfully', function(done) {
        var response = instance.getCompanyInfo();
        var responseObj = Object.assign(new GetCompanyInfoResponse(), response);
        var expectedJson = JSON.stringify(getCompanyInfoResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
  });

}));
