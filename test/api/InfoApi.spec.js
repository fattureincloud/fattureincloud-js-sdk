/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.  For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.fattureInCloudSdk);
  }
}(this, function(expect, fattureInCloudSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new fattureInCloudSdk.InfoApi();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('InfoApi', function() {
    describe('listArchiveCategories', function() {
      it('should call listArchiveCategories successfully', function(done) {
        //uncomment below and update the code to test listArchiveCategories
        //instance.listArchiveCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCities', function() {
      it('should call listCities successfully', function(done) {
        //uncomment below and update the code to test listCities
        //instance.listCities(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCostCenters', function() {
      it('should call listCostCenters successfully', function(done) {
        //uncomment below and update the code to test listCostCenters
        //instance.listCostCenters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCountries', function() {
      it('should call listCountries successfully', function(done) {
        //uncomment below and update the code to test listCountries
        //instance.listCountries(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listCurrencies', function() {
      it('should call listCurrencies successfully', function(done) {
        //uncomment below and update the code to test listCurrencies
        //instance.listCurrencies(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listDeliveryNotesDefaultCausals', function() {
      it('should call listDeliveryNotesDefaultCausals successfully', function(done) {
        //uncomment below and update the code to test listDeliveryNotesDefaultCausals
        //instance.listDeliveryNotesDefaultCausals(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listLanguages', function() {
      it('should call listLanguages successfully', function(done) {
        //uncomment below and update the code to test listLanguages
        //instance.listLanguages(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPaymentAccounts', function() {
      it('should call listPaymentAccounts successfully', function(done) {
        //uncomment below and update the code to test listPaymentAccounts
        //instance.listPaymentAccounts(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listPaymentMethods', function() {
      it('should call listPaymentMethods successfully', function(done) {
        //uncomment below and update the code to test listPaymentMethods
        //instance.listPaymentMethods(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listProductCategories', function() {
      it('should call listProductCategories successfully', function(done) {
        //uncomment below and update the code to test listProductCategories
        //instance.listProductCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listReceivedDocumentCategories', function() {
      it('should call listReceivedDocumentCategories successfully', function(done) {
        //uncomment below and update the code to test listReceivedDocumentCategories
        //instance.listReceivedDocumentCategories(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listRevenueCenters', function() {
      it('should call listRevenueCenters successfully', function(done) {
        //uncomment below and update the code to test listRevenueCenters
        //instance.listRevenueCenters(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listTemplates', function() {
      it('should call listTemplates successfully', function(done) {
        //uncomment below and update the code to test listTemplates
        //instance.listTemplates(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listUnitsOfMeasure', function() {
      it('should call listUnitsOfMeasure successfully', function(done) {
        //uncomment below and update the code to test listUnitsOfMeasure
        //instance.listUnitsOfMeasure(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
    describe('listVatTypes', function() {
      it('should call listVatTypes successfully', function(done) {
        //uncomment below and update the code to test listVatTypes
        //instance.listVatTypes(function(error) {
        //  if (error) throw error;
        //expect().to.be();
        //});
        done();
      });
    });
  });

}));
