/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol. For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.2
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

 import CreatePaymentAccountRequest from '../../src/model/CreatePaymentAccountRequest';
 import CreatePaymentAccountResponse from '../../src/model/CreatePaymentAccountResponse';
 import CreatePaymentMethodRequest from '../../src/model/CreatePaymentMethodRequest';
 import CreatePaymentMethodResponse from '../../src/model/CreatePaymentMethodResponse';
 import GetPaymentAccountResponse from '../../src//model/GetPaymentAccountResponse';
 import GetPaymentMethodResponse from '../../src/model/GetPaymentMethodResponse';
 import ModifyPaymentAccountRequest from '../../src/model/ModifyPaymentAccountRequest';
 import ModifyPaymentAccountResponse from '../../src/model/ModifyPaymentAccountResponse';
 import ModifyPaymentMethodRequest from '../../src/model/ModifyPaymentMethodRequest';
 import ModifyPaymentMethodResponse from '../../src/model/ModifyPaymentMethodResponse';

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.fattureInCloudSdk);
  }
}(this, function(expect, fattureInCloudSdk) {
  'use strict';

  var sandbox = require("sinon").createSandbox();

  var instance = new fattureInCloudSdk.SettingsApi();

  var createPaymentAccountResponseObj = {"data":{"id":12345,"name":"Indesa","type":"bank","iban":"IT17Q0051343200000003497636","sia":"T1234","virtual":false}};
  var createPaymentAccountStub = sandbox.stub(instance, "createPaymentAccount").returns(createPaymentAccountResponseObj);
  
  var createPaymentMethodResponseObj = {"data":{"id":386683,"name":"Bonifico bancario","is_default":true,"type":"standard","details":[{"title":"Banca","description":"Sao Paulo"}],"default_payment_account":{"id":12345,"name":"conto banca SP"}}};
  var createPaymentMethodStub = sandbox.stub(instance, "createPaymentMethod").returns(createPaymentMethodResponseObj);
 
  var deletePaymentAccountResponseObj = {};
  sandbox.stub(instance, "deletePaymentAccount").returns(deletePaymentAccountResponseObj);
  
  var deletePaymentMethodResponseObj = {};
  sandbox.stub(instance, "deletePaymentMethod").returns(deletePaymentMethodResponseObj);
  
  var getPaymentAccountResponseObj = {"data":{"id":12345,"name":"Indesa","type":"bank","iban":"IT17Q0051343200000003497636","sia":"T1234","virtual":false}};
  sandbox.stub(instance, "getPaymentAccount").returns(getPaymentAccountResponseObj);
  
  var getPaymentMethodResponseObj = {"data":{"id":386683,"name":"Bonifico bancario","is_default":true,"type":"standard","details":[{"title":"Banca","description":"Sao Paulo"}],"default_payment_account":{"id":12345,"name":"conto banca SP"}}};
  sandbox.stub(instance, "getPaymentMethod").returns(getPaymentMethodResponseObj);

  var modifyPaymentAccountResponseObj = {"data":{"id":12345,"name":"Indesa","type":"bank","iban":"IT17Q0051343200000003497636","sia":"T1234","virtual":false}};
  var modifyPaymentAccountStub = sandbox.stub(instance, "modifyPaymentAccount").returns(modifyPaymentAccountResponseObj);
  
  var modifyPaymentMethodResponseObj = {"data":{"id":386683,"name":"Bonifico bancario","is_default":true,"type":"standard","details":[{"title":"Banca","description":"Sao Paulo"}],"default_payment_account":{"id":12345,"name":"conto banca SP"}}};
  var modifyPaymentMethodStub = sandbox.stub(instance, "modifyPaymentMethod").returns(modifyPaymentMethodResponseObj);
 
  beforeEach(function() {

  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('SettingsApi', function() {
    describe('createPaymentAccount', function() {
      it('should call createPaymentAccount successfully', function(done) {
        var opts = { "createPaymentAccountRequest":
        {"data":{"name":"Indesa","type":"bank","iban":"IT17Q0051343200000003497636","sia":"T1234","virtual":false}}
        };
        var response = instance.createPaymentAccount(2, opts);
        var responseObj = Object.assign(new CreatePaymentAccountResponse(), response);
        var expectedJson = JSON.stringify(createPaymentAccountResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(createPaymentAccountStub.getCall(0).args[1]).to.equal(opts);
        done();
      });
    });
    describe('createPaymentMethod', function() {
      it('should call createPaymentMethod successfully', function(done) {
        var opts = { "createPaymentMethodRequest":
          {"data":{"name":"Bonifico bancario","is_default":true,"type":"standard","details":[{"title":"Banca","description":"Sao Paulo"}],"default_payment_account":{"id":12345,"name":"conto banca SP"}}}
        };
        var response = instance.createPaymentMethod(2, opts);
        var responseObj = Object.assign(new CreatePaymentMethodResponse(), response);
        var expectedJson = JSON.stringify(createPaymentMethodResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(createPaymentMethodStub.getCall(0).args[1]).to.equal(opts);
        done();
      });
    });
    describe('deletePaymentAccount', function() {
      it('should call deletePaymentAccount successfully', function(done) {
        expect(1).to.equal(1);
        done();
      });
    });
    describe('deletePaymentMethod', function() {
      it('should call deletePaymentMethod successfully', function(done) {
        expect(1).to.equal(1);
        done();
      });
    });
    describe('getPaymentAccount', function() {
      it('should call getPaymentAccount successfully', function(done) {
        var response = instance.getPaymentAccount();
        var responseObj = Object.assign(new GetPaymentAccountResponse(), response);
        var expectedJson = JSON.stringify(getPaymentAccountResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
    describe('getPaymentMethod', function() {
      it('should call getPaymentMethod successfully', function(done) {
        var response = instance.getPaymentMethod();
        var responseObj = Object.assign(new GetPaymentMethodResponse(), response);
        var expectedJson = JSON.stringify(getPaymentMethodResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        done();
      });
    });
    describe('modifyPaymentAccount', function() {
      it('should call modifyPaymentAccount successfully', function(done) {
        var opts = { "modifyPaymentAccountRequest":
          {"data":{"name":"Indessa"}}
        };
        var response = instance.modifyPaymentAccount(2, 12345,  opts);
        var responseObj = Object.assign(new ModifyPaymentAccountResponse(), response);
        var expectedJson = JSON.stringify(modifyPaymentAccountResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(modifyPaymentAccountStub.getCall(0).args[2]).to.equal(opts);
        done();
      });
    });
    describe('modifyPaymentMethod', function() {
      it('should call modifyPaymentMethod successfully', function(done) {
        var opts = { "modifyPaymentMethodRequest":
          {"data":{"name":"Bonifico bancariolo"}}
        };
        var response = instance.modifyPaymentMethod(2, 12345,  opts);
        var responseObj = Object.assign(new ModifyPaymentMethodResponse(), response);
        var expectedJson = JSON.stringify(modifyPaymentMethodResponseObj);
        var actualJson = JSON.stringify(responseObj);
        expect(actualJson).to.equal(expectedJson);
        expect(modifyPaymentMethodStub.getCall(0).args[2]).to.equal(opts);
        done();
      });
    });
  });

}));
