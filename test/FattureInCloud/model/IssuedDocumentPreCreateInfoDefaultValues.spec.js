/**
 * Fatture in Cloud API v2 - API Reference
 * Connect your software with Fatture in Cloud, the invoicing platform chosen by more than 400.000 businesses in Italy.   The Fatture in Cloud API is based on REST, and makes possible to interact with the user related data prior authorization via OAuth2 protocol.  For more information, please visit https://www.fattureincloud.it.
 *
 * The version of the OpenAPI document: 2.0.1
 * Contact: info@fattureincloud.it
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD.
    define(['expect.js', process.cwd()+'/src/FattureInCloud/index'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    factory(require('expect.js'), require(process.cwd()+'/src/FattureInCloud/index'));
  } else {
    // Browser globals (root is window)
    factory(root.expect, root.fattureInCloudSdk);
  }
}(this, function(expect, fattureInCloudSdk) {
  'use strict';

  var instance;

  beforeEach(function() {
    instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
  });

  var getProperty = function(object, getter, property) {
    // Use getter method if present; otherwise, get the property directly.
    if (typeof object[getter] === 'function')
      return object[getter]();
    else
      return object[property];
  }

  var setProperty = function(object, setter, property, value) {
    // Use setter method if present; otherwise, set the property directly.
    if (typeof object[setter] === 'function')
      object[setter](value);
    else
      object[property] = value;
  }

  describe('IssuedDocumentPreCreateInfoDefaultValues', function() {
    it('should create an instance of IssuedDocumentPreCreateInfoDefaultValues', function() {
      // uncomment below and update the code to test IssuedDocumentPreCreateInfoDefaultValues
      //var instane = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be.a(fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues);
    });

    it('should have the property defaultTemplate (base name: "default_template")', function() {
      // uncomment below and update the code to test the property defaultTemplate
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property dnTemplate (base name: "dn_template")', function() {
      // uncomment below and update the code to test the property dnTemplate
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property aiTemplate (base name: "ai_template")', function() {
      // uncomment below and update the code to test the property aiTemplate
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property notes (base name: "notes")', function() {
      // uncomment below and update the code to test the property notes
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property rivalsa (base name: "rivalsa")', function() {
      // uncomment below and update the code to test the property rivalsa
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property cassa (base name: "cassa")', function() {
      // uncomment below and update the code to test the property cassa
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property withholdingTax (base name: "withholding_tax")', function() {
      // uncomment below and update the code to test the property withholdingTax
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property withholdingTaxTaxable (base name: "withholding_tax_taxable")', function() {
      // uncomment below and update the code to test the property withholdingTaxTaxable
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property otherWithholdingTax (base name: "other_withholding_tax")', function() {
      // uncomment below and update the code to test the property otherWithholdingTax
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property useGrossPrices (base name: "use_gross_prices")', function() {
      // uncomment below and update the code to test the property useGrossPrices
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

    it('should have the property paymentMethod (base name: "payment_method")', function() {
      // uncomment below and update the code to test the property paymentMethod
      //var instance = new fattureInCloudSdk.IssuedDocumentPreCreateInfoDefaultValues();
      //expect(instance).to.be();
    });

  });

}));
